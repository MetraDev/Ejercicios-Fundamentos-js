const miArray = function (...values) {
    let value = values;
    this.valueOf = () => value;
//---------------------------------------------------------------------------------------------------------------------
//                                           B-I-D-I-M-E-N-S-I-O-N-A-L
//---------------------------------------------------------------------------------------------------------------------
    function bidimen(...args) {
        let temp = []

        for (let i = 0; i < args.length; i++) {
            for (let j = 0; j < args[0].length; j++) {

                temp.push(args[i][j])
            }
        }
        return temp;
    }
//---------------------------------------------------------------------------------------------------------------------
//                                                  S-L-I-C-E
//---------------------------------------------------------------------------------------------------------------------
    this.slice = (a, b) => {
        let tempArray = new miArray();
        for (let i = a; i < b; i++) {
            tempArray.push(value[i]);
        }

        return tempArray.valueOf();
    };
//---------------------------------------------------------------------------------------------------------------------
//                                                 L-E-N-G-T-H
//---------------------------------------------------------------------------------------------------------------------
    this.length = () => {
        let index;
        for (index in value) ;
        return parseInt(index) + 1;
    };
//---------------------------------------------------------------------------------------------------------------------
//                                                 - P-O-P -
//---------------------------------------------------------------------------------------------------------------------
    this.pop = () => {
        value = this.slice(0, this.length() - 1);

        return this.length();
    };
//---------------------------------------------------------------------------------------------------------------------
//                                                 S-H-I-F-T
//---------------------------------------------------------------------------------------------------------------------
    this.shift = () => {
        value = this.slice(1, this.length());

        return this.length();
    };
//---------------------------------------------------------------------------------------------------------------------
//                                                 -P-U-S-H-
//---------------------------------------------------------------------------------------------------------------------
    this.push = (...args) => {
        value = [...value, ...args];

        return this.length();
    };
//---------------------------------------------------------------------------------------------------------------------
//                                               U-N-S-H-I-F-T
//---------------------------------------------------------------------------------------------------------------------
    this.unshift = (...args) => {
        value = [...args, ...value];

        return this.length();
    };
//---------------------------------------------------------------------------------------------------------------------
//                                               F-O-R-E-A-C-H
//---------------------------------------------------------------------------------------------------------------------
    this.forEach = fn => {
        for (let i = 0; i < this.length(); i++) {
            fn(value[i], i, value);
        }
    };

    // .find, .findIndex, .splice, .map, .filter
    // .reduce, .concat, .join, .reverse, (.sort)?

//---------------------------------------------------------------------------------------------------------------------
//                                                  F-I-N-D
//---------------------------------------------------------------------------------------------------------------------
    this.find = fn => {
        for (items of value) {

            if (fn(items)) {
                return items;
                break;
            }

        }}

//---------------------------------------------------------------------------------------------------------------------
//                                             F-I-N-D-I-N-D-E-X
//---------------------------------------------------------------------------------------------------------------------
    this.findIndex = fn => {
        for (items in value) {

            if (fn(value[items])) {
                return items;
                break;
            }

        }
    }
//---------------------------------------------------------------------------------------------------------------------
//                                               S-P-L-I-C-E
//---------------------------------------------------------------------------------------------------------------------
    this.splice = (a, b, ...args) => {
        let arr = [];
        if (b === 0) { // si es igual a 0 no borra nada
            for (let i = 0; i < this.length(); i++) {
                arr.push(value[i]);
                //Comparamos el index con el parametro y si es igual borramos e introducimos 'args'
                if (i === a) {
                    let temp = arr.pop()
                    arr.push(args);
                    arr.push(temp);
                    // Despues terminamos de introducir los items que faltan
                    for (let i = a + args.length; i < this.length(); i++) {
                        arr.push(value[i]);
                    }

                }
            }
            return arr;

        }
        if (!(b === 0)) {
            //Si es diferente de 0 el mismo bucle que antes para introducir items.
            for (let i = 0; i < this.length(); i++) {
                arr.push(value[i]);
                if (i === a) {
                    // ELIMINA EL ITEM DE LA POSICION EN LA QUE ESTA Y AÑADE EL PARAMETRO
                    arr.pop();
                    arr.push(args);
                    // AÑADE LOS ITEMS QUE FALTAN
                    for (let i = a + b; i < this.length(); i++) {
                        arr.push(value[i]);
                    }
                    return arr;
                }
            }


        }

    }
//---------------------------------------------------------------------------------------------------------------------
//                                                  - M-A-P -
//---------------------------------------------------------------------------------------------------------------------
    this.map = fn => {
        let arr = [];
        for (let i = 0; i < this.length(); i++) {
            arr.push(fn(value[i]));
        }
        return arr;
    }
//---------------------------------------------------------------------------------------------------------------------
//                                                 F-I-L-T-E-R
//---------------------------------------------------------------------------------------------------------------------
    this.filter = fn => {
        let arr = [];
        for (let i = 0; i < this.length(); i++) {
            fn(value[i]) ? arr.push(value[i]) : false;
        }
        return arr;
    }
//---------------------------------------------------------------------------------------------------------------------
//                                                 R-E-D-U-C-E
//---------------------------------------------------------------------------------------------------------------------
    this.reduce = fn => {
        let resultado = 0;
        for (let i = 0; i < this.length(); i++) {
            if (i === 0) {

                resultado = fn(value[i], value[i + 1], i);
            } else if (i === 1) {
                resultado += 0;
            } else {
                resultado = fn(resultado, value[i], i);
            }

        }
        return resultado;


    }
//---------------------------------------------------------------------------------------------------------------------
//                                                C-O-N-C-A-T
//---------------------------------------------------------------------------------------------------------------------
    this.concat = (...args) => {
        let arr = []
        let temp = []
        let i = 0;
        for (let item of value) {
            arr.push(item)
        }
        for (let i = 0; i < args.length; i++) {
            for (let j = 0; j < args[0].length; j++) {

                arr.push(args[i][j])
            }
        }
        return arr;

    }
//---------------------------------------------------------------------------------------------------------------------
//                                               R-E-V-E-R-S-E
//---------------------------------------------------------------------------------------------------------------------
    this.reverse = () =>{
        let arr = [];
        for(let i = this.length()-1; i >= 0; i--){

            arr.push(value[i]);

        }
        return arr;
    };
//---------------------------------------------------------------------------------------------------------------------
//                                                  J-O-I-N
//---------------------------------------------------------------------------------------------------------------------
    this.join= x =>{
        let result= '';
        for(let item of value ){

            if (!(x == null)){
                result +=  item + x ;
            }
            else{result +=  item  ;}
        }
        return result

    };

    this.sort= ()=>{
        let arr= [];
        let temp;
        for(i = 0; i < this.length(); i++){

           if (value[i]<value[i+1]){

               arr.unshift(value[i]);
               arr.push(value[i+1])

           }else{
               arr.push(value[i])
               arr.unshift(value[i+1])

           }

        }
        return arr;


    }
}

function bidimen(...args) {
    let temp = []

    for (let i = 0; i < args.length; i++) {
        for (let j = 0; j < args[0].length; j++) {

            temp.push(args[i][j])
        }
    }
    return temp;
}

const arr = new miArray(1, 5, 0, 7, 8);
const arrs = new miArray('a','b','c');
const arry = new miArray(3,5,2,6,8,1,9,0,10,23,12,55);
//---------------------------------------------------------------------------------------------------------------------
//                                         M-E-T-O-D-O-S D-E - P-R-U-E-B-A-S
//---------------------------------------------------------------------------------------------------------------------
arr.forEach((value, index, array) => {
    console.log('ForEach -> ', value, index, array);
});

var resultado = arr.find(x => {
    return x == 5;
});
var result = arr.findIndex(x => {
    return x == 5;
});

var result2 = arr.map(x => x * 2);
var result3 = arr.filter(x => x >= 1);
var result4 = arr.reduce((a, b, c) => {
    return a + b;
});
let arr2 = [1, 2, 3];
let arr3 = [4, 5, 6];
console.log('soort--- ' + arry.sort());
//---------------------------------------------------------------------------------------------------------------------
//                                       P-R-U-E-B-A-S D-E R-E-S-U-L-T-A-D-O-S
//---------------------------------------------------------------------------------------------------------------------

//console.log(bidimen(arr2,arr3));
//---------------------------------------------------------------------------------------------------------------------
console.log('FIND--- ' +resultado);
//---------------------------------------------------------------------------------------------------------------------
console.log('FINDINDEXX--- ' +result);
//---------------------------------------------------------------------------------------------------------------------
console.log('JOIN--- ' +arrs.join(','));
//---------------------------------------------------------------------------------------------------------------------
console.log('REVERSE--- ' +arr.reverse());
//---------------------------------------------------------------------------------------------------------------------
console.log('CONCAT--- ' +arr.concat(arr2, arr3));
//---------------------------------------------------------------------------------------------------------------------
console.log('REDUCE--- ' +result4);
//---------------------------------------------------------------------------------------------------------------------
console.log('FILTER--- ' +result3);
//---------------------------------------------------------------------------------------------------------------------
console.log('MAP--- ' +result2);
//---------------------------------------------------------------------------------------------------------------------
console.log('SPLICE--- ' + arr.splice(2, 1, 8, 5, 6));
//---------------------------------------------------------------------------------------------------------------------
console.log('--- ' +arr.valueOf());
//---------------------------------------------------------------------------------------------------------------------
console.log('PUSSSH--- ' +arr.push(2, 3, 4));
//---------------------------------------------------------------------------------------------------------------------
console.log('--- ' +arr.valueOf());
//---------------------------------------------------------------------------------------------------------------------
console.log('SLICE--- ' +arr.slice(1, 2));
//---------------------------------------------------------------------------------------------------------------------
console.log('POOOOP--- ' +arr.pop());
//---------------------------------------------------------------------------------------------------------------------
console.log('SHIFT--- ' +arr.shift());
//---------------------------------------------------------------------------------------------------------------------
console.log('--- ' +arr.valueOf());
//---------------------------------------------------------------------------------------------------------------------